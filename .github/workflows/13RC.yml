name: Build OnePlus_13r
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "Branch"
        required: true
        default: 'sm8650'
      FEIL:
        description: "Configuration File"
        required: true
        default: 'oneplus_13r'
      CPUD:
        description: "Processor Codename"
        required: true
        default: 'pineapple'
      ANDROID_VERSION:
        description: "Android Kernel Version"
        required: true
        default: 'android14'
      KERNEL_VERSION:
        description: "Kernel Version"
        required: true
        default: '6.1'
      KERNEL_NAME:
        description: "Modify Kernel Name"
        required: true
        default: '-android14-11-o-g1132d864665d'
      kernelsu_variant:
        description: "Select KSU Variant"
        required: true
        type: choice
        options:
          - SukiSU
          - SukiSU-Ultra
        default: 'SukiSU-Ultra'
      kernelsu_version:
        description: "Select KSU Version"
        required: true
        type: choice
        options:
          - tag
          - main
        default: 'main'
      SUSFS_ENABLED:
        description: "Enable SUSFS"
        required: true
        type: boolean
        default: true
      VFS_patch_ENABLED:
        description: "Enable VFS Patch (New Hooks)?"
        required: true
        type: choice
        options:
          - enable
          - disable
        default: 'enable'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize Build Space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 16384
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Cache Clang Toolchain
        id: cache-clang
        uses: actions/cache@v4
        with:
          path: kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86/clang-r522817
          key: clang-r522817-${{ runner.os }}-${{ hashFiles('**/clang-r522817/**') }}
          restore-keys: clang-r522817-${{ runner.os }}-

      - name: Clone Clang Toolchain
        if: steps.cache-clang.outputs.cache-hit != 'true'
        run: |
          mkdir -p kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86
          git clone --depth=1 https://gitlab.com/kei-space/clang/r522817.git kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86/clang-r522817 || exit 1
          echo "Clang toolchain cloned successfully" > clang_clone.log

      - name: Install Dependencies and Repo Tool
        run: |
          sudo apt update && sudo apt install -y python3 git curl
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo
          git config --global user.name "OplusKernelBuilder"
          git config --global user.email "builder@opluskernel.org"
          repo --version > repo_version.log

      - name: Initialize Repo and Sync
        run: |
          export PATH=/usr/local/bin:$PATH
          rm -rf kernel_workspace
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1 2>&1 | tee repo_init.log || { cat repo_init.log; exit 1; }
          repo sync -j8 --force-sync --fail-fast 2>&1 | tee repo_sync.log || { cat repo_sync.log; exit 1; }
          if [ ! -d "kernel_platform/common" ]; then
            git clone --depth=1 -b sm8650 https://github.com/OnePlusOSS/android_kernel_oneplus_sm8650 kernel_platform/common 2>&1 | tee dir_structure.log || exit 1
          fi
          if [ ! -f "kernel_platform/common/arch/arm64/configs/gki_defconfig" ]; then
            echo "Error: gki_defconfig not found" >> dir_structure.log
            exit 1
          fi
          mkdir -p kernel_platform/msm-kernel
          rm -f kernel_platform/{common,msm-kernel}/android/abi_gki_protected_exports_* 2>/dev/null
          sed -i 's/ -dirty//g' kernel_platform/{common,msm-kernel,external/dtc}/scripts/setlocalversion 2>/dev/null

      - name: Configure Kernel         
        run: |
          cd kernel_workspace/kernel_platform/common
          chmod 644 arch/arm64/configs/gki_defconfig
          sed -i 's/CONFIG_CMDLINE="\(.*\)"/CONFIG_CMDLINE="\1 module_blacklist=clk_gate_test,ext4_inode_test,iio_test_format,oplus_network_stats_calc,soc_topology_test,soc_utils_test,time_test,f_fs_ipc_log,oplus_lock_torture"/' arch/arm64/configs/gki_defconfig
          if ! grep -q 'module_blacklist=oplus_network_app_monitor' arch/arm64/configs/gki_defconfig; then
            echo "Error: Failed to apply module_blacklist" > oneplus_config.log
            exit 1
          fi
          # Disable additional test modules
          sed -i -e 's/CONFIG_REGMAP_KUNIT=[ym]/CONFIG_REGMAP_KUNIT=n/g' \
                -e 's/CONFIG_INPUT_KUNIT_TEST=[ym]/CONFIG_INPUT_KUNIT_TEST=n/g' \
                -e 's/CONFIG_SND_SOC_TOPOLOGY_KUNIT_TEST=[ym]/CONFIG_SND_SOC_TOPOLOGY_KUNIT_TEST=n/g' \
                -e 's/CONFIG_SND_SOC_UTILS_KUNIT_TEST=[ym]/CONFIG_SND_SOC_UTILS_KUNIT_TEST=n/g' \
                -e 's/CONFIG_HID_KUNIT_TEST=[ym]/CONFIG_HID_KUNIT_TEST=n/g' \
                -e 's/CONFIG_RTC_LIB_KUNIT_TEST=[ym]/CONFIG_RTC_LIB_KUNIT_TEST=n/g' \
                -e 's/CONFIG_CLK_KUNIT_TEST=[ym]/CONFIG_CLK_KUNIT_TEST=n/g' \
                -e 's/CONFIG_CLK_GATE_KUNIT_TEST=[ym]/CONFIG_CLK_GATE_KUNIT_TEST=n/g' \
                -e 's/CONFIG_IIO_FORMAT_KUNIT_TEST=[ym]/CONFIG_IIO_FORMAT_KUNIT_TEST=n/g' \
                -e 's/CONFIG_EXT4_KUNIT_TESTS=[ym]/CONFIG_EXT4_KUNIT_TESTS=n/g' \
                -e 's/CONFIG_FAT_KUNIT_TEST=[ym]/CONFIG_FAT_KUNIT_TEST=n/g' \
                -e 's/CONFIG_KUNIT_ALL_TESTS=[ym]/CONFIG_KUNIT_ALL_TESTS=n/g' \
                -e 's/CONFIG_TEST_KMOD=[ym]/CONFIG_TEST_KMOD=n/g' \
                -e 's/CONFIG_USB_KUNIT_TEST=[ym]/CONFIG_USB_KUNIT_TEST=n/g' \
            arch/arm64/configs/gki_defconfig            

      - name: Clean Build Environment
        run: |
          cd kernel_workspace/kernel_platform
          tools/bazel clean --expunge

      - name: Configure SukiSU
        if: ${{ github.event.inputs.kernelsu_variant == 'SukiSU-Ultra' || github.event.inputs.kernelsu_variant == 'SukiSU' }}
        run: |
          cd kernel_workspace/kernel_platform
          if [[ "${{ github.event.inputs.kernelsu_version }}" == "tag" ]]; then
            BRANCH=""
          else
            BRANCH="-s susfs-dev"
          fi
          curl -LSs "https://raw.githubusercontent.com/ShirkNeko/${{ github.event.inputs.kernelsu_variant }}/main/kernel/setup.sh" | bash $BRANCH
          cd KernelSU
          KSU_VERSION=$(expr $(git rev-list --count main) + 10606)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=[0-9]*/DKSU_VERSION=$KSU_VERSION/" kernel/Makefile

      - name: Apply SUSFS Patches
        if: ${{ github.event.inputs.SUSFS_ENABLED == 'true' }}
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/ShirkNeko/SukiSU_patch.git
          cp susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch kernel_platform/common/
          cp susfs4ksu/kernel_patches/fs/* kernel_platform/common/fs/
          cp susfs4ksu/kernel_patches/include/linux/* kernel_platform/common/include/linux/
          cd kernel_platform/common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch

      - name: Apply VFS Patches
        if: ${{ github.event.inputs.VFS_patch_ENABLED == 'enable' }}
        run: |
          cd kernel_workspace/kernel_platform/common
          cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
          patch -p1 -F 3 < syscall_hooks.patch

      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          CONFIG_FILE=./common/arch/arm64/configs/gki_defconfig
          grep -q "^CONFIG_KSU=y" $CONFIG_FILE || echo "CONFIG_KSU=y" >> $CONFIG_FILE
          if [[ "${{ github.event.inputs.kernelsu_variant }}" == "SukiSU-Ultra" ]]; then
            grep -q "^CONFIG_KPM=y" $CONFIG_FILE || echo "CONFIG_KPM=y" >> $CONFIG_FILE
          fi
          grep -q "^CONFIG_KSU_SUSFS=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_SUS_PATH=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_SUS_MOUNT=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_SUS_KSTAT=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_TRY_UMOUNT=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_SPOOF_UNAME=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_ENABLE_LOG=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> $CONFIG_FILE
          grep -q "^CONFIG_KSU_SUSFS_SUS_SU=n" $CONFIG_FILE || echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> $CONFIG_FILE
          grep -q "^CONFIG_TMPFS_XATTR=y" $CONFIG_FILE || echo "CONFIG_TMPFS_XATTR=y" >> $CONFIG_FILE
          grep -q "^CONFIG_TMPFS_POSIX_ACL=y" $CONFIG_FILE || echo "CONFIG_TMPFS_POSIX_ACL=y" >> $CONFIG_FILE
          grep -q "^CONFIG_WIREGUARD=y" $CONFIG_FILE || echo "CONFIG_WIREGUARD=y" >> $CONFIG_FILE
          grep -q "^CONFIG_IP_NF_NAT=y" $CONFIG_FILE || echo "CONFIG_IP_NF_NAT=y" >> $CONFIG_FILE
          grep -q "^CONFIG_IP_NF_TARGET_TTL=y" $CONFIG_FILE || echo "CONFIG_IP_NF_TARGET_TTL=y" >> $CONFIG_FILE
          grep -q "^CONFIG_IP6_NF_TARGET_HL=y" $CONFIG_FILE || echo "CONFIG_IP6_NF_TARGET_HL=y" >> $CONFIG_FILE
          grep -q "^CONFIG_IP6_NF_MATCH_HL=y" $CONFIG_FILE || echo "CONFIG_IP6_NF_MATCH_HL=y" >> $CONFIG_FILE
          grep -q "^CONFIG_DEBUG_KERNEL=n" $CONFIG_FILE || echo "CONFIG_DEBUG_KERNEL=n" >> $CONFIG_FILE
          grep -q "^CONFIG_DYNAMIC_DEBUG=n" $CONFIG_FILE || echo "CONFIG_DYNAMIC_DEBUG=n" >> $CONFIG_FILE
          grep -q "^CONFIG_DEBUG_INFO=n" $CONFIG_FILE || echo "CONFIG_DEBUG_INFO=n" >> $CONFIG_FILE
          grep -q "^CONFIG_TCP_CONG_ADVANCED=y" $CONFIG_FILE || echo "CONFIG_TCP_CONG_ADVANCED=y" >> $CONFIG_FILE
          grep -q "^CONFIG_TCP_CONG_BBR=y" $CONFIG_FILE || echo "CONFIG_TCP_CONG_BBR=y" >> $CONFIG_FILE
          grep -q "^CONFIG_DEFAULT_TCP_CONG=\"bbr\"" $CONFIG_FILE || echo "CONFIG_DEFAULT_TCP_CONG=\"bbr\"" >> $CONFIG_FILE
          grep -q "^CONFIG_TCP_CONG_CDG=y" $CONFIG_FILE || echo "CONFIG_TCP_CONG_CDG=y" >> $CONFIG_FILE
          grep -q "^CONFIG_DEFAULT_BBR=y" $CONFIG_FILE || echo "CONFIG_DEFAULT_BBR=y" >> $CONFIG_FILE
          grep -q "^CONFIG_DEFAULT_CUBIC=n" $CONFIG_FILE || echo "CONFIG_DEFAULT_CUBIC=n" >> $CONFIG_FILE
          grep -q "^CONFIG_DEFAULT_CDG=n" $CONFIG_FILE || echo "CONFIG_DEFAULT_CDG=n" >> $CONFIG_FILE
          grep -q "^CONFIG_NET_SCH_DEFAULT=y" $CONFIG_FILE || echo "CONFIG_NET_SCH_DEFAULT=y" >> $CONFIG_FILE
          grep -q "^CONFIG_DEFAULT_FQ=y" $CONFIG_FILE || echo "CONFIG_DEFAULT_FQ=y" >> $CONFIG_FILE
          grep -q "^CONFIG_DEFAULT_NET_SCH=\"fq\"" $CONFIG_FILE || echo "CONFIG_DEFAULT_NET_SCH=\"fq\"" >> $CONFIG_FILE
          grep -q "^CONFIG_NET_SCH_HTB=y" $CONFIG_FILE || echo "CONFIG_NET_SCH_HTB=y" >> $CONFIG_FILE
          grep -q "^CONFIG_NET_SCH_PRIO=y" $CONFIG_FILE || echo "CONFIG_NET_SCH_PRIO=y" >> $CONFIG_FILE
          grep -q "^CONFIG_NET_SCH_SFQ=y" $CONFIG_FILE || echo "CONFIG_NET_SCH_SFQ=y" >> $CONFIG_FILE
          grep -q "^CONFIG_NET_SCH_TBF=y" $CONFIG_FILE || echo "CONFIG_NET_SCH_TBF=y" >> $CONFIG_FILE
          grep -q "^CONFIG_TCP_CONG_BIC=n" $CONFIG_FILE || echo "CONFIG_TCP_CONG_BIC=n" >> $CONFIG_FILE
          grep -q "^CONFIG_TCP_CONG_WESTWOOD=n" $CONFIG_FILE || echo "CONFIG_TCP_CONG_WESTWOOD=n" >> $CONFIG_FILE
          grep -q "^CONFIG_TCP_CONG_HTCP=y" $CONFIG_FILE || echo "CONFIG_TCP_CONG_HTCP=y" >> $CONFIG_FILE
          grep -q "^CONFIG_IP_NF_TARGET_ECN=y" $CONFIG_FILE || echo "CONFIG_IP_NF_TARGET_ECN=y" >> $CONFIG_FILE
          grep -q "^CONFIG_IP_ECN=y" $CONFIG_FILE || echo "CONFIG_IP_ECN=y" >> $CONFIG_FILE
          grep -q "^CONFIG_TCP_ECN=y" $CONFIG_FILE || echo "CONFIG_TCP_ECN=y" >> $CONFIG_FILE
          grep -q "^CONFIG_IPV6_ECN=y" $CONFIG_FILE || echo "CONFIG_IPV6_ECN=y" >> $CONFIG_FILE
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Add Make Name
        run: |
          cd kernel_workspace/kernel_platform
          if [[ "${{ github.event.inputs.KERNEL_VERSION }}" == "6.1" || "${{ github.event.inputs.KERNEL_VERSION }}" == "6.6" ]]; then
            sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" build/kernel/kleaf/impl/stamp.bzl
          fi
          sed -i '$s|echo "\$res"|echo "\${{ github.event.inputs.KERNEL_NAME }}"|' common/scripts/setlocalversion

      - name: Build Kernel
        run: |
          cd kernel_workspace/kernel_platform
          tools/bazel run --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist

      - name: Generate Kernel Images
        run: |
          cd kernel_workspace/kernel_platform/dist
          cp Image Image_original
          curl -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          ./patch_linux
          mv oImage Image_kpm
          mv Image_original Image

      - name: Package Kernel
        run: |
          cd kernel_workspace/kernel_platform/dist
          git clone --depth=1 https://github.com/Kernel-SU/AnyKernel3 AnyKernel3-no_kpm
          git clone --depth=1 https://github.com/Kernel-SU/AnyKernel3 AnyKernel3-kpm
          rm -rf AnyKernel3-{kpm,no_kpm}/.git AnyKernel3-{kpm,no_kpm}/push.sh
          cp Image AnyKernel3-no_kpm/Image
          cp Image_kpm AnyKernel3-kpm/Image
          cd AnyKernel3-no_kpm && zip -r ../AnyKernel3-no_kpm_${{ env.KSUVER }}_13r.zip . && cd ..
          cd AnyKernel3-kpm && zip -r ../AnyKernel3-kpm_${{ env.KSUVER }}_13r.zip . && cd ..

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-artifacts
          path: |
            kernel_workspace/kernel_platform/dist/AnyKernel3-no_kpm_${{ env.KSUVER }}_13r.zip
            kernel_workspace/kernel_platform/dist/AnyKernel3-kpm_${{ env.KSUVER }}_13r.zip
