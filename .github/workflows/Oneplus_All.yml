name: Build KernelSU Next SUSFS All
on:
  workflow_dispatch:
    inputs:
      CPU:
        type: choice
        description: "Branch"
        required: true
        default: sm8650
        options:
          - sm7550
          - sm7675
          - sm8450
          - sm8475
          - sm8550
          - sm8650
          - sm8750
      FEIL:
        type: choice
        description: "Configuration File"
        required: true
        default: oneplus_13r
        options:
          - oneplus_nord_ce4_v
          - oneplus_ace_3v_v
          - oneplus_nord_4_v
          - oneplus_10_pro_v
          - oneplus_10t_v
          - oneplus_11r_v
          - oneplus_ace2_v
          - oneplus_ace_pro_v
          - oneplus_11_v
          - oneplus_11_t
          - oneplus_12r_v
          - oneplus_ace2pro_v
          - oneplus_ace3_v
          - oneplus_open_v
          - oneplus12_v
          - oneplus_13r
          - oneplus_ace3_pro_v
          - oneplus_ace5
          - oneplus_pad2_v
          - oneplus_13
          - oneplus_ace5_pro
          - oneplus_13t
      CPUD:
        type: choice
        description: "Processor Code"
        required: true
        default: pineapple
        options:
          - crow
          - waipio
          - kalama
          - pineapple
          - sun
      ANDROID_VERSION:
        type: choice
        description: "Kernel Android Version"
        required: true
        default: android14
        options:
          - android12
          - android13
          - android14
          - android15
      KERNEL_VERSION:
        type: choice
        description: "Kernel Version"
        required: true
        default: "6.1"
        options:
          - "5.10"
          - "5.15"
          - "6.1"
          - "6.6"
      BUILD_METHOD:
        type: choice
        description: "Build Method"
        required: true
        default: gki
        options:
          - gki
          - perf
      KSUNEXT_ENABLED:
        description: "Add KSU Next"
        required: true
        type: boolean
        default: true
      SUSFS_ENABLED:
        description: "Add SUSFS"
        required: true
        type: boolean
        default: true
      SUSFS_CI:
        description: "Use CI for SUSFS Module Download?"
        required: true
        type: boolean
        default: true
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "build"
          git config --global user.email "263623064@qq.com"

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y python3 git curl patch bc bison flex libssl-dev jq \
            make gcc clang libelf-dev build-essential zip unzip
          sudo apt-get clean

      - name: Show selected inputs debug
        run: |
          echo "Selected CPU: ${{ github.event.inputs.CPU }}"
          echo "Selected FEIL: ${{ github.event.inputs.FEIL }}"
          echo "Selected CPUD: ${{ github.event.inputs.CPUD }}"
          echo "Selected ANDROID_VERSION: ${{ github.event.inputs.ANDROID_VERSION }}"
          echo "Selected KERNEL_VERSION: ${{ github.event.inputs.KERNEL_VERSION }}"
          echo "Selected BUILD_METHOD: ${{ github.event.inputs.BUILD_METHOD }}"
          echo "Selected SUSFS_CI: ${{ github.event.inputs.SUSFS_CI }}"
          echo "Selected SUSFS_ENABLED: ${{ github.event.inputs.SUSFS_ENABLED }}"
          echo "Selected KSUNEXT_ENABLED: ${{ github.event.inputs.KSUNEXT_ENABLED }}"

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir -p kernel_workspace && cd kernel_workspace
          if ! repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1; then
            echo "Failed to initialize repo. Check if manifest file ${{ github.event.inputs.FEIL }}.xml exists for branch oneplus/${{ github.event.inputs.CPU }}."
            exit 1
          fi
          repo sync -j$(nproc)
          rm -f kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports to remove."
          rm -f kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports to remove."

      - name: Force remove -dirty suffix
        run: |
          cd kernel_workspace/kernel_platform
          sed -i 's/ -dirty//g' common/scripts/setlocalversion || true
          sed -i 's/ -dirty//g' msm-kernel/scripts/setlocalversion || true
          sed -i 's/ -dirty//g' external/dtc/scripts/setlocalversion || true
          sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' common/scripts/setlocalversion || true
          git add -A
          git commit -m "Force remove -dirty suffix from kernel version" || true

      - name: Set up KernelSU Next
        if: github.event.inputs.KSUNEXT_ENABLED == 'true'
        run: |
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next-sufs-dev
          cd KernelSU-Next
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile

      - name: Set up SUSFS
        if: github.event.inputs.SUSFS_ENABLED == 'true'
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/WildPlusKernel/kernel_patches.git
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../kernel_patches/next/kernel-patch-susfs-v1.5.7-to-KernelSU-Next.patch ./KernelSU-Next/
          cp ../kernel_patches/next/syscall_hooks.patch ./common/
          cp -r ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp -r ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          # Apply patches with error handling
          cd ./KernelSU-Next
          if ! patch -p1 < kernel-patch-susfs-v1.5.7-to-KernelSU-Next.patch; then
            echo "Failed to apply KernelSU-Next SUSFS patch"
            exit 1
          fi
          cd ../common
          if ! patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch; then
            echo "Failed to apply SUSFS GKI patch"
            exit 1
          fi
          cp ../../kernel_patches/69_hide_stuff.patch ./
          if ! patch -p1 -F 3 < 69_hide_stuff.patch; then
            echo "Failed to apply hide stuff patch"
            exit 1
          fi
          if ! patch -p1 -F 3 < syscall_hooks.patch; then
            echo "Failed to apply syscall hooks patch"
            exit 1
          fi

      - name: Apply kernel configuration
        run: |
          cd kernel_workspace/kernel_platform
          CONFIG_FILE="./common/arch/arm64/configs/gki_defconfig"
          cat << EOF >> $CONFIG_FILE
          # KernelSU and SUSFS
          CONFIG_KSU=y
          CONFIG_KSU_WITH_KPROBES=n
          CONFIG_KSU_SUSFS=y
          CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_PATH=y
          CONFIG_KSU_SUSFS_SUS_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_KSTAT=y
          CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n
          CONFIG_KSU_SUSFS_TRY_UMOUNT=y
          CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y
          CONFIG_KSU_SUSFS_SPOOF_UNAME=y
          CONFIG_KSU_SUSFS_ENABLE_LOG=y
          CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y
          CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y
          CONFIG_KSU_SUSFS_OPEN_REDIRECT=y
          CONFIG_KSU_SUSFS_SUS_SU=n
          # TMPFS settings
          CONFIG_TMPFS_XATTR=y
          CONFIG_TMPFS_POSIX_ACL=y
          # Netfilter and networking
          CONFIG_WIREGUARD=y
          CONFIG_IP_NF_NAT=y
          CONFIG_IP_NF_TARGET_TTL=y
          CONFIG_IP6_NF_TARGET_HL=y
          CONFIG_IP6_NF_MATCH_HL=y
          CONFIG_IP_NF_TARGET_ECN=y
          CONFIG_IP_ECN=y
          CONFIG_TCP_ECN=y
          CONFIG_IPV6_ECN=y
          # Strip debug to reduce size
          CONFIG_DEBUG_KERNEL=n
          CONFIG_DYNAMIC_DEBUG=n
          CONFIG_DEBUG_INFO=n
          # TCP congestion control
          CONFIG_TCP_CONG_ADVANCED=y
          CONFIG_TCP_CONG_BBR=y
          CONFIG_DEFAULT_TCP_CONG="bbr"
          CONFIG_TCP_CONG_CDG=y
          CONFIG_DEFAULT_BBR=y
          CONFIG_DEFAULT_CUBIC=n
          CONFIG_DEFAULT_CDG=n
          # Network scheduling
          CONFIG_NET_SCH_DEFAULT=y
          CONFIG_DEFAULT_FQ=y
          CONFIG_DEFAULT_NET_SCH="fq"
          CONFIG_NET_SCH_HTB=y
          CONFIG_NET_SCH_PRIO=y
          CONFIG_NET_SCH_SFQ=y
          CONFIG_NET_SCH_TBF=y
          EOF
          # Disable defconfig check
          sed -i 's/check_defconfig//g' ./common/build.config.gki || true

      - name: Build kernel
        run: |
          cd kernel_workspace
          export LTO=thin
          if [[ "${{ github.event.inputs.CPU }}" == "sm8650" || "${{ github.event.inputs.CPU }}" == "sm7675" ]]; then
            if ! ./kernel_platform/build_with_bazel.py -t ${{ github.event.inputs.CPUD }} ${{ github.event.inputs.BUILD_METHOD }}; then
              echo "Bazel build failed with LTO=thin, retrying without LTO"
              unset LTO
              ./kernel_platform/build_with_bazel.py -t ${{ github.event.inputs.CPUD }} ${{ github.event.inputs.BUILD_METHOD }}
            fi
          else
            if ! ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} ${{ github.event.inputs.BUILD_METHOD }}; then
              echo "Oplus build failed with LTO=thin, retrying without LTO"
              unset LTO
              ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} ${{ github.event.inputs.BUILD_METHOD }}
            fi
          fi

      - name: Prepare AnyKernel3
        run: |
          git clone https://github.com/Numbersf/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          # Find kernel Image
          IMAGE_PATH=$(find ./kernel_workspace/kernel_platform -name "Image" -type f | head -n 1)
          if [ -z "$IMAGE_PATH" ]; then
            echo "Kernel Image not found. Build likely failed."
            exit 1
          fi
          cp "$IMAGE_PATH" ./AnyKernel3/Image
          # Copy additional files for sm8750
          if [ "${{ github.event.inputs.CPU }}" = "sm8750" ]; then
            BASE_DIR="./kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.BUILD_METHOD }}/dist/"
            for file in dtbo.img system_dlkm.erofs.img vendor_dlkm.img vendor_boot.img; do
              if [ -f "$BASE_DIR$file" ]; then
                target_name="$file"
                [ "$file" = "system_dlkm.erofs.img" ] && target_name="system_dlkm.img"
                cp "$BASE_DIR$file" "./AnyKernel3/$target_name"
              else
                echo "$file not found, skipping."
              fi
            done
          fi

      - name: Download SUSFS Module
        run: |
          if [ "${{ github.event.inputs.SUSFS_CI }}" == "true" ]; then
            if [ -z "${{ secrets.GITHUB_TOKEN }}" ]; then
              echo "GITHUB_TOKEN not set, falling back to release download"
              wget -O ksu_module_susfs_1.5.2+_Release.zip https://github.com/sidex15/ksu_module_susfs/releases/latest/download/ksu_module_susfs_1.5.2+.zip
            else
              LATEST_RUN_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/sidex15/susfs4ksu-module/actions/runs?status=success" | \
                jq -r '.workflow_runs[] | select(.head_branch == "v1.5.2+") | .id' | head -n 1)
              if [ -z "$LATEST_RUN_ID" ]; then
                echo "No successful CI run found, falling back to release"
                wget -O ksu_module_susfs_1.5.2+_Release.zip https://github.com/sidex15/ksu_module_susfs/releases/latest/download/ksu_module_susfs_1.5.2+.zip
              else
                ARTIFACT_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                  "https://api.github.com/repos/sidex15/susfs4ksu-module/actions/runs/$LATEST_RUN_ID/artifacts" | jq -r '.artifacts[0].archive_download_url')
                curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o ksu_module_susfs_1.5.2+_CI.zip "$ARTIFACT_URL"
              fi
            fi
          else
            wget -O ksu_module_susfs_1.5.2+_Release.zip https://github.com/sidex15/ksu_module_susfs/releases/latest/download/ksu_module_susfs_1.5.2+.zip
          fi
          cp ksu_module_susfs_1.5.2+_*.zip ./AnyKernel3/

      - name: Remove _uv suffix from FEIL
        id: feil_clean
        run: |
          clean_feil="${{ github.event.inputs.FEIL }}"
          clean_feil="${clean_feil%_v}"  # Remove trailing _v
          clean_feil="${clean_feil%_u}"  # Remove trailing _u
          echo "value=$clean_feil" >> $GITHUB_OUTPUT

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_KernelSU_Next_${{ env.KSUVER }}_${{ steps.feil_clean.outputs.value }}
          path: ./AnyKernel3/*
